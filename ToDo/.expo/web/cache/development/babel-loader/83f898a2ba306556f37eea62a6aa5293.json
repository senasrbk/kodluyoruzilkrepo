{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ToDoCard from \"./components/ToDoCard/ToDoCard\";\nimport Save from \"./components/Save/Save\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      counter = _useState2[0],\n      setCounter = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toDo = _useState4[0],\n      setToDo = _useState4[1];\n\n  function fixCounter() {\n    var count = 0;\n    toDo.forEach(function (item) {\n      return !item.isDone ? count++ : {};\n    });\n    setCounter(count);\n  }\n\n  useEffect(fixCounter, [toDo]);\n\n  function addToDo(text) {\n    var newToDo = {\n      id: Date.now(),\n      title: text.toString(),\n      isDone: false\n    };\n    setToDo([].concat(_toConsumableArray(toDo), [newToDo]));\n  }\n\n  var changeStatus = function changeStatus(changedtoDo) {\n    var newToDo = toDo.map(function (item) {\n      if (item.id === changedtoDo) {\n        if (item.isDone) {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            isDone: false\n          });\n        } else {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            isDone: true\n          });\n        }\n      }\n\n      return item;\n    });\n    setToDo(newToDo);\n  };\n\n  function deleteToDo(id) {\n    var newToDo = toDo;\n    var index = newToDo.indexOf(id);\n    newToDo.splice(index, 1);\n    setToDo(newToDo);\n  }\n\n  var renderToDo = function renderToDo(_ref) {\n    var item = _ref.item;\n    return _jsx(ToDoCard, {\n      toDo: item,\n      onChange: changeStatus,\n      onDelete: deleteToDo\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inner_container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Yapilacaklar\"\n      }), _jsx(Text, {\n        style: styles.counter,\n        children: counter\n      })]\n    }), _jsx(FlatList, {\n      style: styles.flat_list,\n      data: toDo,\n      renderItem: renderToDo,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(Save, {\n      onSave: addToDo\n    })]\n  });\n}\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#0f2027',\n    flex: 1\n  },\n  inner_container: {\n    flexDirection: 'row',\n    padding: 10\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 35,\n    flex: 1,\n    color: '#fea500'\n  },\n  counter: {\n    fontSize: 35,\n    marginRight: 5,\n    color: '#fea500'\n  },\n  flat_list: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Sena/OneDrive/Documents/Sites/deneme/kodluyoruzilkrepo/ToDo/src/App.js"],"names":["React","useState","useEffect","ToDoCard","Save","App","counter","setCounter","toDo","setToDo","fixCounter","count","forEach","item","isDone","addToDo","text","newToDo","id","Date","now","title","toString","changeStatus","changedtoDo","map","deleteToDo","index","indexOf","splice","renderToDo","styles","container","inner_container","flat_list","StyleSheet","create","backgroundColor","flex","flexDirection","padding","fontWeight","fontSize","color","marginRight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {View, Text, StyleSheet, FlatList} from 'react-native';\nimport ToDoCard from './components/ToDoCard/ToDoCard';\nimport Save from './components/Save/Save';\n\nfunction App() {\n  const [counter, setCounter] = useState(0);\n  const [toDo, setToDo] = useState([]);\n\n  function fixCounter() {\n    let count = 0;\n    toDo.forEach(item => (!item.isDone ? count++ : {}));\n    setCounter(count);\n  }\n  useEffect(fixCounter, [toDo]);\n\n  function addToDo(text) {\n    const newToDo = {\n      id: Date.now(),\n      title: text.toString(),\n      isDone: false,\n    };\n    setToDo([...toDo, newToDo]);\n  }\n  const changeStatus = changedtoDo => {\n    const newToDo = toDo.map(item => {\n      if (item.id === changedtoDo) {\n        if (item.isDone) {\n          return {...item, isDone: false};\n        } else {\n          return {...item, isDone: true};\n        }\n      }\n      return item;\n    });\n    setToDo(newToDo);\n  };\n  function deleteToDo(id) {\n    const newToDo = toDo;\n    var index = newToDo.indexOf(id);\n    newToDo.splice(index, 1);\n    setToDo(newToDo);\n  }\n\n  const renderToDo = ({item}) => (\n    <ToDoCard toDo={item} onChange={changeStatus} onDelete={deleteToDo} />\n  );\n  return (\n    <View style={styles.container}>\n      <View style={styles.inner_container}>\n        <Text style={styles.title}>Yapilacaklar</Text>\n        <Text style={styles.counter}>{counter}</Text>\n      </View>\n      <FlatList\n        style={styles.flat_list}\n        data={toDo}\n        renderItem={renderToDo}\n        keyExtractor={item => item.id}\n      />\n      <Save onSave={addToDo} />\n    </View>\n  );\n}\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#0f2027',\n    flex: 1,\n  },\n  inner_container: {\n    flexDirection: 'row',\n    padding: 10,\n  },\n  title: {fontWeight: 'bold', fontSize: 35, flex: 1, color: '#fea500'},\n  counter: {fontSize: 35, marginRight: 5, color: '#fea500'},\n  flat_list: {flex: 1},\n});"]},"metadata":{},"sourceType":"module"}